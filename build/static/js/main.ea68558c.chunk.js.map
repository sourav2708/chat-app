{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","context/profile.context.js","components/PrivateRoute.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","components/EditableInput.js","components/dashbaord/ProviderBlock.js","misc/helpers.js","components/ProfileAvatar.js","components/dashbaord/AvatarUploadBtn.js","components/dashbaord/index.js","components/dashbaord/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Loader","center","vertical","size","content","speed","to","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","useRef","onFormChange","onSubmit","current","check","newRoomdata","admins","currentUser","push","info","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","length","Error","link","linkWithPopup","Tag","closable","onClose","getNameInitials","splitNmae","toUpperCase","split","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","text","ChatRoomList","aboveE1Height","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","RoomInfoBtnModal","v","memo","EditRoomBtnDrawer","chatId","useParams","updateData","initailValue","newName","newDesc","Top","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","background","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","IconButton","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea68558c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n        apiKey: \"AIzaSyDsLpYFiYmEGkwsYrg4ThpUfOcBzkcjIUY\",\r\n        authDomain: \"chat-web-app-7d818.firebaseapp.com\",\r\n        databaseURL: \"https://chat-web-app-7d818-default-rtdb.firebaseio.com\",\r\n        projectId: \"chat-web-app-7d818\",\r\n        storageBucket: \"chat-web-app-7d818.appspot.com\",\r\n        messagingSenderId: \"12777284032\",\r\n        appId: \"1:12777284032:web:a8c15760c096e6a6366825\"\r\n};\r\n\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Container, Grid, Row, Panel, Col, Button, Icon, Alert } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\n\r\nconst SignIn = () => {\r\n    const signInWithProvider = async provider => {\r\n    try {\r\n       const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n        \r\n        if(additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n                name: user.displayName,\r\n                createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n            });\r\n        }\r\n\r\n      Alert.success('Signed in', 4000);\r\n    } catch (err) {\r\n        Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n       signInWithProvider( new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n      signInWithProvider( new firebase.auth.GoogleAuthProvider());\r\n  };\r\n    return (\r\n      <Container>\r\n       <Grid className=\"mt-page\">\r\n           <Row>\r\n               <Col xs={24} md={12} mdOffset={6}>\r\n                   <Panel>\r\n                       <div className=\"text-center\">\r\n                         <h2>Welcome to Chat</h2>\r\n                         <p>Progressive chat platform for neophytes</p>\r\n                       </div>\r\n\r\n                       <div className=\"mt-3\">\r\n                           <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                               <Icon icon=\"facebook\" /> Continue with Facebook\r\n                           </Button>\r\n\r\n                           <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                               <Icon icon=\"google\" /> Continue with Google\r\n                           </Button>\r\n                       </div>\r\n                   </Panel>\r\n               </Col>\r\n           </Row>\r\n       </Grid>\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { createContext, useState, useContext, useEffect } from \"react\";\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from \"../misc/firebase\";\r\n\r\n export const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n const [profile, setProfile] = useState(null);\r\n const [isLoading, setIsLoading] = useState(true);\r\n\r\n useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n\r\n  const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if(authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n\r\n\r\n        userRef.on('value', snap => {\r\n          const {name, createdAt, avatar} = snap.val();\r\n\r\n          const data = {\r\n              name,\r\n              createdAt,\r\n              avatar,\r\n              uid: authObj.uid,\r\n              email: authObj.email,\r\n            };\r\n\r\n            setProfile(data);\r\n            setIsLoading(false);\r\n        });\r\n\r\n\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!! snapshot.val() === false) {\r\n              return;\r\n          }\r\n      \r\n          userStatusRef\r\n             .onDisconnect()\r\n             .set(isOfflineForDatabase)\r\n             .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n          });\r\n      });\r\n\r\n      } else {  \r\n          \r\n        if(userRef) {\r\n            userRef.off();\r\n        }\r\n\r\n        if(userStatusRef) {\r\n          userStatusRef.off()\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n        authUnsub();\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        if(userRef) {\r\n            userRef.off();\r\n        }\r\n\r\n        if(userStatusRef) {\r\n          userStatusRef.off()\r\n        }\r\n    };\r\n  }, []);\r\n\r\n    return (\r\n     <ProfileContext.Provider value={ {isLoading, profile} }>\r\n        {children}\r\n     </ProfileContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);","import React from 'react'\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n    const { profile, isLoading } = useProfile();\r\n\r\n\r\n    if(isLoading && !profile) {\r\n        return (\r\n             <Container>\r\n         <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n        </Container>\r\n        );\r\n    }\r\n\r\n    if(!profile && !isLoading) {\r\n        return <Redirect to =\"/signin\"  />;\r\n    } \r\n    \r\n    return (\r\n        <Route {...routeProps}>\r\n          {children}  \r\n        </Route>\r\n    )\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useCallback, useState, useEffect, useRef } from \"react\"\r\nimport { database } from \"./firebase\";\r\n\r\nexport function useModalState(defaultValue = false) {\r\n    const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n    const open = useCallback(() => setIsOpen(true), []);\r\n    const close = useCallback(() => setIsOpen(false), []);\r\n    return{ isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n    const [matches, setMatches] = useState(\r\n      () => window.matchMedia(query).matches\r\n    );\r\n  \r\n    useEffect(() => {\r\n      const queryList = window.matchMedia(query);\r\n      setMatches(queryList.matches);\r\n  \r\n      const listener = evt => setMatches(evt.matches);\r\n  \r\n      queryList.addListener(listener);\r\n      return () => queryList.removeListener(listener);\r\n    }, [query]);\r\n  \r\n    return matches;\r\n  };\r\n  \r\n  export function usePresence(uid) {\r\n    const [presence, setPresence] = useState(null);\r\n\r\n    useEffect(() => {\r\n       const userStatusRef = database.ref(`/status/${uid}`)\r\n\r\n       userStatusRef.on('value', (snap) => {\r\n         if(snap.exists()) {\r\n           const data = snap.val();\r\n\r\n           setPresence(data);\r\n         }\r\n\r\n       })\r\n\r\n       return () => {\r\n          userStatusRef.off();\r\n       };\r\n    }, [uid]);\r\n\r\n    return presence;\r\n  }\r\n\r\n  export function useHover() {\r\n    const [value, setValue] = useState(false);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n    \r\n    useEffect(\r\n      () => {\r\n        const node = ref.current;\r\n        if (node) {\r\n          node.addEventListener(\"mouseover\", handleMouseOver);\r\n          node.addEventListener(\"mouseout\", handleMouseOut);\r\n        }\r\n          return () => {\r\n            node.removeEventListener(\"mouseover\", handleMouseOver);\r\n            node.removeEventListener(\"mouseout\", handleMouseOut);\r\n          };\r\n      },\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      [ref.current] // Recall only if ref changes\r\n    );\r\n\r\n    return [ref, value];\r\n  }","import React, {  useState, useCallback, useRef } from 'react';\r\nimport { Button, Icon, Modal, Form, FormGroup, FormControl, ControlLabel, Schema, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n    name: StringType().isRequired('chat name is required'),\r\n    description: StringType().isRequired('Description is required'),\r\n\r\n})\r\n\r\nconst INITIAL_FORM = {\r\n    name: '',\r\n    description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n      setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if(!formRef.current.check()) {\r\n        return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomdata = {\r\n        ...formValue,\r\n        createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        admins: {\r\n        [auth.currentUser.uid] : true,\r\n        }\r\n      };\r\n \r\n      try {\r\n         await database.ref('rooms').push(newRoomdata);\r\n\r\n         Alert.info(`${formValue.name} has been created`, 4000);\r\n         \r\n         setIsLoading(false);\r\n         setFormValue(INITIAL_FORM);\r\n         close();\r\n         \r\n      } catch (err) {\r\n          setIsLoading(false);\r\n          Alert.error(err.message, 4000);\r\n      }\r\n  \r\n\r\n  }\r\n\r\n\r\n    return (\r\n        <div className=\"mt-1\">\r\n            <Button block color=\"green\" onClick={open}>\r\n                <Icon icon=\"creative\" /> Create new chat room \r\n            </Button>\r\n\r\n            <Modal show={isOpen} onHide={close} >\r\n                <Modal.Header>\r\n                  <Modal.Title>New chat room </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form \r\n                     fluid \r\n                     onChange={onFormChange} \r\n                     formValue={formValue} \r\n                     model={model} \r\n                     ref={formRef}\r\n                    >\r\n                      <FormGroup>\r\n                          <ControlLabel>Room name</ControlLabel>\r\n                          <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n                      </FormGroup>\r\n                      \r\n                      <FormGroup>\r\n                       <ControlLabel>Description</ControlLabel>\r\n                       <FormControl  \r\n                        componentClass=\"textarea\" \r\n                        rows={5} \r\n                        name=\"description\" \r\n                        placeholder=\"Enter room description...\" \r\n                       />\r\n                      </FormGroup>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button block appearance=\"primary\" onClick={onSubmit} disabled={isLoading}>\r\n                        Create new chat room \r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\n\r\nconst EditableInput = ({\r\n    initialValue,\r\n     onSave,\r\n    label = null,\r\n    placeholder = 'write your value',\r\n     emptyMsg = 'Input is empty',\r\n     wrapperClassName = \"\",\r\n     ...inputProps\r\n    }) => {\r\n        const [input, setInput] = useState(initialValue);\r\n        const [isEditable, setIsEditable] = useState(false);\r\n\r\n        const onInputChange =  useCallback(value => {\r\n          setInput(value);\r\n        }, []);\r\n\r\n        const onEditClick = useCallback(() => {\r\n            setIsEditable(p =>!p);\r\n            setInput(initialValue);\r\n        }, [initialValue]);\r\n\r\n        const onSaveClick = async () => {\r\n          const trimmed = input.trim();\r\n\r\n          if(trimmed === '') {\r\n              Alert.info(emptyMsg, 4000);\r\n          }\r\n            \r\n          if(trimmed !== initialValue) {\r\n              await onSave(trimmed);\r\n          }\r\n\r\n          setIsEditable(false);\r\n        };\r\n\r\n    return (\r\n        <div className={wrapperClassName}>\r\n            {label}\r\n            <InputGroup>\r\n            <Input\r\n             {...inputProps}\r\n             disabled={!isEditable}\r\n             placeholder={placeholder} \r\n             value={input} \r\n             onChange={onInputChange} \r\n            />\r\n             <InputGroup.Button onClick={onEditClick}>\r\n             <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n             </InputGroup.Button>\r\n             {isEditable && (\r\n             <InputGroup.Button onClick={onSaveClick}>\r\n             <Icon icon=\"check\" />\r\n             </InputGroup.Button>\r\n             )}\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React, { useState } from 'react';\r\nimport { Icon, Tag, Button, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\nconst [isConnected, setIsConnected] = useState({\r\n    \r\n    \r\n    'google.com': auth.currentUser.providerData.some(\r\n    data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n        data => data.providerId === 'facebook.com'\r\n        ),\r\n  });\r\n\r\n    const updateIsConnected = (providerId, value) => {\r\n        setIsConnected(p => {\r\n            return {\r\n                ...p,\r\n                [providerId] : value,\r\n            }\r\n        })\r\n    }\r\n\r\n    const unlink = async (providerId) => {\r\n\r\n        try {\r\n\r\n            if(auth.currentUser.providerData.length === 1) {\r\n                throw new Error(`You can not disconnect from ${providerId}`)\r\n            }\r\n\r\n            await auth.currentUser.unlink(providerId);\r\n            updateIsConnected(providerId, false);\r\n            Alert.info(`Discontinued from ${providerId}`, 4000);\r\n        } catch(err) {\r\n          Alert.error(err.message, 4000);\r\n        }\r\n\r\n    }\r\n \r\n    const unlinkFacebook = () => {\r\n        unlink('facebook.com')\r\n    }\r\n    const unlinkGoogle = () => {\r\n        unlink('google.com');\r\n    };\r\n\r\n     const link = async (provider) => {\r\n         try {\r\n            await auth.currentUser.linkWithPopup(provider);\r\n            Alert.info(`Linked to ${provider.providerId}`, 4000)\r\n            updateIsConnected(provider.providerId, true);\r\n         } catch (err) {\r\n           Alert.error(err.message, 4000);\r\n         }\r\n     };\r\n\r\n    const linkFacebook = () => {\r\n        link(new firebase.auth.FacebookAuthProvider())\r\n    };\r\n    const linkGoogle = () => {\r\n        link(new firebase.auth.GoogleAuthProvider())\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isConnected['google.com'] && ( \r\n                <Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n                <Icon icon=\"google\" /> Connected\r\n            </Tag>\r\n                )}\r\n            {isConnected['facebook.com'] && (\r\n            <Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n               <Icon icon=\"facebook\" /> Connected\r\n            </Tag>\r\n            )}\r\n\r\n            <div className=\"mt-2\">\r\n                {!isConnected['google.com'] && \r\n                <Button block color=\"green\" onClick={linkGoogle}>\r\n                    <Icon icon=\"google\" /> Link to Google\r\n                </Button>\r\n                }\r\n                {!isConnected['facebook.com'] && \r\n                <Button block color=\"blue\" onClick={linkFacebook}>\r\n                    <Icon icon=\"facebook\" /> Link to Facebook\r\n                </Button>\r\n                } \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProviderBlock;\r\n\r\n"," export function getNameInitials(name) {\r\n const splitNmae = name.toUpperCase().split(' ');\r\n\r\n  if(splitNmae.length > 1) {\r\n      return splitNmae[0][0] + splitNmae[1][0];\r\n  }\r\n\r\n  return splitNmae[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n     return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n   ? Object.keys(snapVal).map(roomId => {\r\n       return {...snapVal[roomId], id: roomId};\r\n  }) : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n   const updates = {};\r\n\r\n   updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n   const getMsgs = db\r\n        .ref('/messages')\r\n        .orderByChild('author/uid')\r\n        .equalTo(userId)\r\n        .once('value');\r\n\r\n   const getRooms = db\r\n         .ref('/rooms')\r\n         .orderByChild('lastMessage/author/uid')\r\n         .equalTo(userId)\r\n         .once('value');\r\n\r\n   const [mSnap, rSnap] = await Promise.all([getMsgs,getRooms]);\r\n\r\n\r\n   mSnap.forEach(msgSnap => {\r\n       updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n   })\r\n\r\n   rSnap.forEach(roomSnap => {\r\n     updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n   });\r\n\r\n   return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n    return array.reduce((result, item) => {\r\n       const groupingKey = groupingKeyFn(item);\r\n\r\n       if (!result[groupingKey]) {\r\n         result[groupingKey] = [];\r\n       }\r\n\r\n       result[groupingKey].push(item);\r\n\r\n       return result;\r\n    },[]);\r\n}","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps}) => {\r\n    return (\r\n        <Avatar circle {...avatarProps}>\r\n            {\r\n                getNameInitials(name)\r\n            }\r\n        </Avatar>\r\n    );\r\n};\r\n\r\nexport default ProfileAvatar;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Modal, Button, Alert } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\n\r\n\r\nconst fileInputTypes = '.png , .jpeg , .jpg ';\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = (canvas) => {\r\n    return new Promise( (resolve, reject) => {\r\n        canvas.toBlob( (blob) => {\r\n            if(blob) {\r\n                resolve(blob);\r\n            } else {\r\n                reject( new Error('File process error') );\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nconst AvatarUploadBtn = () => {\r\n    const {isOpen, open, close} = useModalState();\r\n\r\n    const {profile} = useProfile();\r\n    const [img, setImg] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const avatarEditorRef = useRef();\r\n\r\n    const onFileInputChange = ev => {\r\n        const currFiles = ev.target.files;\r\n\r\n        if(currFiles.length === 1) {\r\n            const file = currFiles[0];\r\n\r\n            if ( isValidFile(file)) {\r\n                setImg(file);\r\n\r\n                open();\r\n            } else {\r\n                Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onUploadClick = async () => {  \r\n      const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n      setIsLoading(true);\r\n     try {\r\n        const blob = await getBlob(canvas);\r\n\r\n        const avatarFileRef = storage.ref(`/profile/${profile.uid}`).child('avatar');\r\n\r\n        const uploadAvatarResult = await avatarFileRef.put( blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`\r\n        });\r\n\r\n        const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n        const updates = await getUserUpdates(\r\n            profile.uid, \r\n            'avatar', \r\n            downloadUrl, \r\n            database\r\n          );\r\n\r\n          await database.ref().update(updates);\r\n\r\n        setIsLoading(false);\r\n        Alert.info ('Avatar has been uploaded', 4000);\r\n    \r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n   };\r\n\r\n    return (\r\n        <div className=\"mt-3 text-center\">    \r\n\r\n        <ProfileAvatar \r\n         src={profile.avatar} \r\n         name={profile.name} \r\n         className=\"width-200 height-200 img-fullsize font-huge\" \r\n        />\r\n\r\n       <div>\r\n            <label \r\n            htmlFor=\"avatar-upload\" \r\n            className=\"d-block cursor-pointer padded\"\r\n           >\r\n             Select new avatar \r\n            <input \r\n            id=\"avatar-upload\" \r\n            type=\"file\" \r\n            className=\"d-none\" \r\n            accept={fileInputTypes} \r\n            onChange={onFileInputChange}\r\n           />\r\n         </label>  \r\n\r\n         <Modal show={isOpen} onHide={close}>\r\n\r\n          <Modal.Header>\r\n              <Modal.Title>\r\n                  Adjust and upload new avatar\r\n              </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n             { img && (\r\n                 <AvatarEditor\r\n                 ref={avatarEditorRef}\r\n                 image={img}\r\n                 width={200}\r\n                 height={200}\r\n                 border={10}\r\n                 borderRadius={100}\r\n                 rotate={0}\r\n                 />\r\n                 )}\r\n                 </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button block appearance=\"ghost\" onClick={onUploadClick} disabled={isLoading}>\r\n                  Upload new avatar\r\n              </Button>\r\n          </Modal.Footer>\r\n\r\n         </Modal>\r\n\r\n        </div>\r\n     </div>\r\n    );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Button, Divider, Alert, } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport EditableInput from '../EditableInput';\r\nimport { database } from '../../misc/firebase';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n    const { profile } = useProfile();\r\n\r\n    const onSave = async newData => {      \r\n      try {\r\n         const updates = await getUserUpdates(\r\n               profile.uid, \r\n               'name', \r\n               newData, \r\n               database\r\n             );\r\n\r\n             await database.ref().update(updates);\r\n\r\n        Alert.success('Nickname has been updated', 4000);\r\n      } catch (err) {\r\n        Alert.error(err.message, 4000);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Drawer.Header>\r\n          <Drawer.Title>\r\n            Dashboard\r\n          </Drawer.Title>\r\n         </Drawer.Header>\r\n\r\n         <Drawer.Body>\r\n           <h3>Hey, {profile.name}</h3>\r\n           <ProviderBlock />\r\n           <Divider />\r\n           <EditableInput\r\n             name=\"nickname\"\r\n             initialValue={profile.name}\r\n             onSave={onSave}\r\n             label={<h6 className=\"mb-2\">Nickname</h6>}\r\n           />\r\n           <AvatarUploadBtn />\r\n         </Drawer.Body>\r\n\r\n         <Drawer.Footer>\r\n          <Button block color=\"red\" onClick={onSignOut}>\r\n              Sign out\r\n          </Button>\r\n         </Drawer.Footer>\r\n    </>  \r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\n\r\nconst DashboardToggle = () => {\r\n    const { isOpen, close, open } = useModalState();\r\n    const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n    const onSignOut = useCallback(() => {\r\n       database.ref(`/status/${auth.currentUser.uid}`).set(isOfflineForDatabase).then(() => {\r\n          auth.signOut();\r\n          Alert.info('Signed out', 4000);\r\n          close();\r\n        }).catch(err => {\r\n            Alert.error(err.message, 4000);\r\n        });\r\n    },[close]);\r\n\r\n    return (\r\n        <>\r\n            <Button block color=\"blue\" onClick={open}>\r\n                <Icon icon=\"dashboard\" /> Dashboard\r\n            </Button>\r\n            <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n               <Dashboard onSignOut={onSignOut} />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { database } from \"../misc/firebase\";\r\nimport { transformToArrWithId } from \"../misc/helpers\";\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({children}) => {\r\n    const [rooms, setRooms] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const roomListRef = database.ref('rooms');\r\n\r\n        roomListRef.on('value', (snap) => {\r\n            const data = transformToArrWithId(snap.val())\r\n            setRooms(data);\r\n        });\r\n\r\n        return () => {\r\n            roomListRef.off();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n       <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n     );\r\n   };\r\n\r\n   export const useRooms = () => useContext(RoomsContext);","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n\r\n   const {createdAt, name, lastMessage} = room;\r\n    return (\r\n        <div>\r\n            \r\n           <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h3 className=\"text-disappear\">{name}</h3>\r\n              <TimeAgo \r\n                datetime={lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)} \r\n                className=\"font-normal text-black-45\" />\r\n           </div>\r\n\r\n           <div className=\"d-flex align-items-center text-black-70\">\r\n              {\r\n                 lastMessage ? (\r\n                <>\r\n                 <div className=\"d-flex align-items-center\">\r\n                    <ProfileAvatar \r\n                      src={lastMessage.author.avatar} \r\n                      name={lastMessage.author.name} \r\n                      size=\"sm\"\r\n                     />\r\n                 </div>\r\n\r\n                    <div className=\"text-disappear ml-2\">\r\n                     <div className=\"italic\">{lastMessage.author.name}</div>\r\n                          <span>{lastMessage.text || lastMessage.file.name}</span>\r\n                    </div>\r\n               </>\r\n               ) : (   \r\n                 <span>No messages yet...</span>\r\n               )}\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Nav, Loader } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveE1Height }) => {\r\n    const rooms = useRooms();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <Nav\r\n        appearance=\"subtle\"\r\n        vertical\r\n        reversed\r\n        className=\"overflow-y-scroll custom-scroll\"\r\n        style={{\r\n            height: `calc(100% - ${aboveE1Height}px)`,\r\n        }}\r\n        activeKey={location.pathname}\r\n        >\r\n            {!rooms && (\r\n               <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n            )}\r\n            {rooms && \r\n              rooms.length > 0 && \r\n              rooms.map(room => (\r\n                <Nav.Item \r\n                  componentClass={Link} \r\n                  to={`/chat/${room.id}`} \r\n                  key={room.id}\r\n                  eventKey={`/chat/${room.id}`}\r\n                >\r\n                    <RoomItem room={room} />\r\n                </Nav.Item>\r\n              ))}\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashbaord/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const topSidebarRef = useRef();\r\n    const [height, setHeight] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (topSidebarRef.current) {\r\n            setHeight(topSidebarRef.current.scrollHeight);\r\n        }\r\n    }, [topSidebarRef]);\r\n\r\n    return (\r\n        <div className=\"h-100 pt-2\"> \r\n            <div>\r\n                <DashboardToggle />\r\n                <CreateRoomBtnModal />\r\n                <Divider>Join conversation</Divider>\r\n            </div>\r\n            <ChatRoomList aboveE1Height={height} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { createContext, useContextSelector } from \"use-context-selector\";\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({children, data}) => {\r\nreturn (\r\n     <CurrentRoomContext.Provider value={data}>\r\n         {children}\r\n     </CurrentRoomContext.Provider>\r\n   );\r\n};\r\n\r\n\r\nexport const useCurrentRoom = selector => \r\n  useContextSelector(CurrentRoomContext, selector);","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n\r\n    const { isOpen, close, open } = useModalState();\r\n    const description = useCurrentRoom(v => v.description);\r\n    const name = useCurrentRoom(v => v.name);\r\n\r\n    return (\r\n        <div>\r\n           <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n               Room Information\r\n               </Button> \r\n               <Modal show={isOpen} onHide={close}>\r\n\r\n                   <Modal.Header>\r\n                     <Modal.Title>\r\n                         About {name}\r\n                     </Modal.Title>\r\n                   </Modal.Header>\r\n                   <Modal.Body>\r\n                     <h6 className=\"mb-1\">Description</h6>\r\n                     <p>{description}</p>\r\n                   </Modal.Body>\r\n                   <Modal.Footer>\r\n                       <Button block onClick={close}>\r\n                           Close\r\n                       </Button>\r\n                   </Modal.Footer>\r\n               </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, {memo} from 'react';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useParams } from 'react-router';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport EditableInput from '../../EditableInput';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { database } from '../../../misc/firebase';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n\r\n    const { isOpen, open, close } = useModalState();\r\n    const { chatId } = useParams();\r\n    const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n    const name = useCurrentRoom(v => v.name);\r\n    const description = useCurrentRoom(v => v.description);\r\n\r\n    const updateData = (key, value) => {\r\n       database.ref(`rooms/${chatId}`).child(key).set(value).then(() => {\r\n           Alert.success('Successfully updated', 4000);\r\n       }).catch(err => {\r\n           Alert.error(err.message, 4000);\r\n       });\r\n    };\r\n\r\n    const onNameSave = (newName) => {\r\n       updateData('name', newName)\r\n    };\r\n\r\n    const onDescriptionSave = (newDesc) => {\r\n        updateData('description',newDesc)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n                A\r\n            </Button>\r\n            \r\n            <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n               <Drawer.Header>\r\n                   <Drawer.Title>Edit Room</Drawer.Title>\r\n               </Drawer.Header>\r\n               <Drawer.Body>\r\n                   <EditableInput \r\n                      initailValue={name}\r\n                      onSave={onNameSave}\r\n                      label={<h6 className=\"mb-2\">Name</h6>}\r\n                      emptyMsg=\"Name can not be empty\"\r\n                   />\r\n                   <EditableInput \r\n                       componentClass=\"textarea\"\r\n                       rows={5}\r\n                       initialValue={description}\r\n                       onSave={onDescriptionSave}\r\n                       emptyMsg=\"Description can not be empty\"\r\n                       wrapperClassName=\"mt-3\"\r\n                   />\r\n               </Drawer.Body>\r\n               <Drawer.Footer>\r\n                   <Button block onClick={close}>\r\n                       Close\r\n                   </Button>\r\n               </Drawer.Footer>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n\r\n","import React, { memo } from 'react';\r\nimport { Icon, ButtonToolbar } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\n\r\nconst Top = () => {\r\n    const name = useCurrentRoom(v => v.name);\r\n    const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n    const isMobile = useMediaQuery('(max-width: 992px)');\r\n    return (\r\n        <div>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n         <h4 className=\"text-disappear d-flex align-items-center\">\r\n             <Icon\r\n              componentClass={Link} \r\n              to=\"/\" icon=\"arrow-cirle-left\" \r\n              size=\"2x\" \r\n              className={\r\n                  isMobile\r\n                   ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                    : 'd-none'} />\r\n             <span className=\"text-disappear\">{name}</span>\r\n         </h4>\r\n          \r\n          <ButtonToolbar className=\"ws-nowrap\">\r\n              {isAdmin && <EditRoomBtnDrawer />}\r\n          </ButtonToolbar>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-between align-items-centers\">\r\n             <span>todo</span>\r\n             <RoomInfoBtnModal />\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({afterUpload}) => {\r\n    const { chatId } = useParams();\r\n    const { isOpen, close, open } = useModalState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    const onChange = (fileArr) => {\r\n        const filtered = fileArr\r\n           .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n           .slice(0, 5);\r\n    \r\n        setFileList(filtered);\r\n    };\r\n\r\n    const onUpload = async () => {\r\n        try {\r\n            const uploadPromises = fileList.map(f => {\r\n              return storage\r\n                  .ref(`/chat/${chatId}`)\r\n                  .child(Date.now() + f.name)\r\n                  .put(f.blobFile, {\r\n                   cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n                 });\r\n            });\r\n\r\n            const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n            const shapePromises = uploadSnapshots.map(async snap => {\r\n                return { \r\n                    contentType: snap.metadata.contentType,\r\n                    name: snap.metadata.name,\r\n                    url: await snap.ref.getDownloadURL()\r\n                }\r\n            })\r\n\r\n            const files = await Promise.all(shapePromises);\r\n\r\n            await afterUpload(files);\r\n\r\n            setIsLoading(false);\r\n            close();\r\n\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            Alert.error(err.message);\r\n        }\r\n      }; \r\n\r\n    return (\r\n        <>\r\n            <InputGroup.Button onClick={open}>\r\n                 <Icon icon=\"attachment\" />\r\n            </InputGroup.Button>\r\n            <Modal show={isOpen} onHide={close}>\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>Upload files</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Uploader\r\n                       autoUpload={false}\r\n                       action=\"\"\r\n                       fileList={fileList}\r\n                       onChange={onChange}\r\n                       multiple\r\n                       listType=\"picture-text\"\r\n                       className=\"w-100\"\r\n                       disabled={isLoading}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button block disabled={isLoading} onClick={onUpload}>Send to chat</Button>\r\n                    <div className=\"text-right mt-2\">\r\n                        <small>*only files less than 5 mb are allowed</small>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({afterUpload}) => {\r\n\r\n    const {chatId} = useParams()\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const onClick = useCallback(() => {\r\n        setIsRecording(p => !p);\r\n    }, []);\r\n\r\n    const onUpload = useCallback(async data => {\r\n        setIsUploading(true)\r\n        try {\r\n          const snap = await storage\r\n            .ref(`/chat/${chatId}`)\r\n            .child(`audio_${Date.now()}.mp3`)\r\n            .put(data.blob, {\r\n             cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n           });\r\n\r\n           const file = {\r\n               contentType: snap.metadata.contentType,\r\n               name: snap.metadata.name,\r\n               url: await snap.ref.getDownloadURL(),\r\n           };\r\n\r\n           setIsUploading(false)\r\n           afterUpload([file])\r\n        } catch (error) {\r\n            setIsUploading(false)\r\n           Alert.error(error.message)\r\n        } \r\n    }, [afterUpload, chatId]);\r\n\r\n    return (\r\n        <InputGroup.Button \r\n            onClick={onClick} \r\n            disabled={isUploading} \r\n            className={isRecording ? 'animate-blink' : ''}\r\n        >\r\n            <Icon icon=\"microphone\" />\r\n                 <ReactMic \r\n                    record={isRecording}\r\n                    className=\"d-none\"\r\n                    onStop={onUpload}\r\n                    mimeType=\"audio/mp3\"\r\n                 />\r\n        </InputGroup.Button>\r\n    );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n     likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom  = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n     if(input.trim() === '') {\r\n       return;\r\n     }\r\n\r\n     const msgData = assembleMessage(profile, chatId);\r\n     msgData.text = input;\r\n\r\n     const updates = {};\r\n\r\n      const messageId = database.ref('messages').push().key;\r\n\r\n      updates[`/messages/${messageId}`] = msgData;\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...msgData,\r\n        msgId: messageId,\r\n      };\r\n\r\n         setIsLoading(true);\r\n        try  {\r\n          await database.ref().update(updates);\r\n          setInput('');\r\n          setIsLoading(false);\r\n\r\n        } catch(err) {\r\n           setIsLoading(false);\r\n          Alert.error(err.message);\r\n        }\r\n      };\r\n\r\n      const onKeyDown = ev => {\r\n         if(ev.keyCode === 13) {\r\n           ev.preventDefault();\r\n           onSendClick();\r\n         }\r\n      };\r\n\r\n      const afterUpload = useCallback( \r\n        async files => {\r\n         setIsLoading(true);\r\n\r\n         const updates = {};\r\n\r\n         files.forEach(file => {\r\n          const msgData = assembleMessage(profile, chatId);\r\n          msgData.file = file;\r\n\r\n          const messageId = database.ref('messages').push().key;\r\n\r\n          updates[`/messages/${messageId}`] = msgData;\r\n         })\r\n\r\n         const lastMsgId = Object.keys(updates).pop();\r\n\r\n         updates[`/rooms/${chatId}/lastMessage`] = {\r\n           ...updates[lastMsgId],\r\n           msgId: lastMsgId,\r\n         };\r\n\r\n         try  {\r\n          await database.ref().update(updates);\r\n          setIsLoading(false);\r\n        } catch(err) {\r\n           setIsLoading(false);\r\n          Alert.error(err.message);\r\n        }\r\n       }, [chatId, profile]\r\n      );\r\n\r\n    return (\r\n        <div>\r\n         <InputGroup>\r\n          <AttachmentBtnModal afterUpload={afterUpload} />\r\n          <AudioMsgBtn afterUpload={afterUpload} />\r\n          <Input \r\n            placeholder=\"Write a new message here...\"  \r\n            value={input} \r\n            onChange={onInputChange} \r\n            onKeyDown={ onKeyDown }\r\n          />\r\n\r\n           <InputGroup.Button \r\n             color=\"blue\" \r\n             appearance=\"primary\" \r\n             onClick={onSendClick}\r\n             disabled={isLoading}\r\n           >\r\n            <Icon icon=\"send\" />\r\n          </InputGroup.Button>\r\n          </InputGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Bottom ;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({profile, children, ...btnProps}) => {\r\n    const {isOpen, close, open} = useModalState()\r\n\r\n    const { name, avatar, createdAt } = profile;\r\n\r\n    const shortName = profile.name.split(' ')[0];\r\n\r\n    const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n    return (\r\n        <>\r\n            <Button {...btnProps} onClick={open}>\r\n                {shortName}\r\n            </Button>\r\n            <Modal show={isOpen} onHide={close}>\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        {shortName} profile\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"text-center\">\r\n\r\n                    <ProfileAvatar\r\n                         src={avatar}\r\n                         name={name}\r\n                         className=\"width-200 height-200 img-fullsize font-huge\"\r\n                     />\r\n\r\n                     <h4 className=\"mt-2\">{name}</h4>\r\n                     <p>Member since {memberSince}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {children}\r\n                    <Button block onClick={close}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = (presence) => {\r\n    if(!presence) {\r\n        return 'gray';\r\n    }\r\n\r\n    switch(presence.state) {\r\n        case 'online': \r\n              return 'green';\r\n        case 'offline': \r\n              return 'red';\r\n        default: \r\n              return 'gray';\r\n    }\r\n};\r\n\r\n  const getText = (presence) => {\r\n      if(!presence) {\r\n          return 'Unknown state';\r\n      }\r\n\r\n      return presence.state === 'online' ? 'Online' : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n  };\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n        <Whisper placement=\"top\" trigger=\"hover\" speaker={\r\n            <Tooltip>\r\n                {getText(presence)}\r\n            </Tooltip>\r\n         }\r\n        >\r\n            <Badge className=\"cursor-pointer\" style={{background: getColor(presence)}} />            \r\n        </Whisper>\r\n    );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Badge,Whisper, Tooltip, IconButton, Icon } from 'rsuite';\r\n\r\n\r\nconst ConditionalBadge = ({condition, children}) => {\r\n    return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n    isVisible,\r\n    iconName,\r\n    tooltip,\r\n    onClick,\r\n    badgeContent,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <div className=\"ml-2\" style={{visibility: isVisible ? 'visible' : 'hidden'}}>\r\n            \r\n          <ConditionalBadge condition={badgeContent}>\r\n            <Whisper\r\n               placement=\"top\"\r\n               delay={0}\r\n               delayHide={0}\r\n               trigger=\"hover\"\r\n               speaker={<Tooltip>{tooltip}</Tooltip>} \r\n            >\r\n               <IconButton \r\n                 {...props}\r\n                 onClick={onClick}\r\n                 circle\r\n                 size=\"xs\"\r\n                 icon={<Icon icon={iconName} />}\r\n               />\r\n            </Whisper>\r\n          </ConditionalBadge>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({src, fileName}) => {\r\n    const { isOpen, open, close } = useModalState();\r\n\r\n    return (\r\n        <>\r\n        <input \r\n           type=\"image\" \r\n           src={src} alt=\"file\" \r\n           onClick={open} \r\n           className=\"mw-100 mh-100 w-auto\" \r\n        />\r\n        <Modal show={isOpen} onHide={close}>\r\n           <Modal.Header>\r\n                <Modal.Title>{fileName}</Modal.Title>    \r\n           </Modal.Header>    \r\n           <Modal.Body>\r\n                <div>\r\n                    <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n                </div>    \r\n           </Modal.Body>    \r\n           <Modal.Footer>\r\n               <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   View original\r\n               </a>    \r\n           </Modal.Footer>      \r\n        </Modal>    \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React, { memo } from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport { Button } from 'rsuite';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n    if(file.contentType.includes('image')) {\r\n        return (\r\n         <div className=\"height-220\">\r\n            <ImgBtnModal src={file.url} fileName={file.name} />\r\n        </div>\r\n       );\r\n    }\r\n\r\n    if(file.contentType.includes('audio')) {\r\n        return ( \r\n            // eslint-disable-next-line jsx-a11y/media-has-caption\r\n        <audio controls>\r\n             <source src={file.url} type=\"audio/mp3\" />\r\n             Your browser does not support the audio element.\r\n        </audio>\r\n      );\r\n    }\r\n\r\n    return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({message, handleAdmin, handleLike, handleDelete}) => {\r\n     const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n     const [selfRef, isHovered] = useHover();\r\n     const isMobile = useMediaQuery(('(max-width: 992px)'));\r\n\r\n      const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n      const admins = useCurrentRoom(v => v.admins);\r\n\r\n      const isMsgAuthorAdmin = admins.includes(author.uid);\r\n      const isAuthor = auth.currentUser.uid === author.uid;\r\n      const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n      const canShowIcons = isMobile || isHovered;\r\n      const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n    return (\r\n        <li className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`} ref={selfRef}>\r\n            <div className=\"d-flex align-items-center font-bolder mb-1\"> \r\n            <PresenceDot uid={author.uid} />\r\n\r\n            <ProfileAvatar \r\n                   src={author.avatar} \r\n                   name={author.name} \r\n                   className=\"ml-1\" \r\n                   size=\"xs\" \r\n                />\r\n           \r\n           <ProfileInfoBtnModal profile={author} appearance=\"link\" className=\"p-0 ml-1 text-black\">\r\n               {canGrantAdmin && \r\n              <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n                 {isMsgAuthorAdmin ? 'Remove admin permission' : 'Give admin in this room'}\r\n              </Button>\r\n               }\r\n           </ProfileInfoBtnModal>\r\n           <TimeAgo\r\n                  datetime = {createdAt}\r\n                  className=\"font-normal text-black-45 ml-2\"\r\n                />  \r\n\r\n                <IconBtnControl\r\n                    {...(isLiked ? { color: 'red'} : {})} \r\n                    isVisible={canShowIcons}\r\n                    iconName=\"heart\"\r\n                    tooltip=\"Like this message\"\r\n                    onClick={() => handleLike(message.id)}\r\n                    badgeContent={likeCount}\r\n                />\r\n                 {isAuthor && (\r\n                    <IconBtnControl \r\n                    isVisible={canShowIcons}\r\n                    iconName=\"close\"\r\n                    tooltip=\"Delete this message\"\r\n                    onClick={() => handleDelete(message.id, file)}\r\n                  />\r\n                 )}\r\n\r\n            </div>\r\n\r\n        <div>\r\n           {text && <span className=\"word-breal-all\">{text}</span>} \r\n           {file && renderFileMessage(file)}\r\n        </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable consistent-return */\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport {Button,  Alert } from 'rsuite';\r\nimport { auth, database, storage } from '../../../misc/firebase';\r\nimport { groupBy, transformToArrWithId } from '../../../misc/helpers';\r\nimport  MessageItem  from './MessageItem';\r\n \r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n        const percentage = \r\n        (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n    return percentage > threshold;\r\n}\r\n\r\n\r\nconst Messages = () => {\r\n    const { chatId } = useParams()\r\n    const [messages, setMessages] = useState(null);\r\n    const [limit, setLimit] = useState(PAGE_SIZE);\r\n    const selfRef = useRef()\r\n\r\n    const isChatEmpty = messages && messages.length === 0;\r\n    const canShowMessages = messages && messages.length > 0;\r\n\r\n\r\n    const loadMessages = useCallback((limitToLast) => {\r\n        const node = selfRef.current;\r\n        \r\n        messagesRef.off();\r\n       \r\n        messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', (snap) => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setMessages(data);\r\n\r\n      if (shouldScrollToBottom(node)) {\r\n          node.scrollTop = node.scrollHeight;\r\n      }\r\n     });\r\n\r\n         setLimit(p => p + PAGE_SIZE)\r\n    }, [chatId]);\r\n\r\n    const onLoadMore = useCallback(() => {\r\n        const node = selfRef.current;\r\n        const oldHeight = node.scrollHeight;\r\n\r\n        loadMessages(limit);\r\n\r\n        setTimeout(() => {\r\n            const newHeight = node.scrollHeight;\r\n\r\n            node.scrollTop = newHeight - oldHeight;\r\n         }, 200);\r\n    }, [loadMessages, limit]);\r\n\r\n    useEffect(() => {\r\n        const node = selfRef.current;\r\n\r\n        loadMessages();\r\n\r\n        setTimeout(() => {\r\n            node.scrollTop = node.scrollHeight;\r\n        }, 200)\r\n      \r\n       return () => {\r\n            messagesRef.off('value');\r\n       };\r\n    }, [loadMessages]);\r\n\r\n    const handleAdmin = useCallback(async (uid) => {\r\n        const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n        let alertMsg;\r\n\r\n        await adminsRef.transaction(admins => {\r\n            if (admins) {\r\n                if (admins[uid]) {\r\n                    admins[uid] = null;\r\n                    alertMsg = 'Admins permission removed'\r\n                } else {\r\n                    admins[uid] = true;\r\n                    alertMsg = 'Admin permission granted';\r\n                }\r\n            }\r\n\r\n            return admins;\r\n        });\r\n\r\n        Alert.info(alertMsg, 4000)\r\n\r\n    }, [chatId]);\r\n\r\n    const handleLike = useCallback(async msgId => {\r\n        const { uid } = auth.currentUser;\r\n        const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n        let alertMsg;\r\n\r\n        await messageRef.transaction(msg => {\r\n            if (msg) {\r\n                if (msg.likes && msg.likes[uid]) {\r\n                    msg.likeCount -= 1;\r\n                   msg.likes[uid] = null;\r\n                    alertMsg = 'Like removed'\r\n                } else {\r\n                    msg.likeCount += 1;\r\n                    \r\n                    if(!msg.likes) {\r\n                        msg.likes = {};\r\n                    }\r\n                    \r\n                    msg.likes[uid] = true;\r\n                    alertMsg = 'Like added';\r\n                }\r\n            }\r\n\r\n            return msg;\r\n        });\r\n\r\n        Alert.info(alertMsg, 4000);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback(\r\n          async (msgId, file) => {\r\n        // eslint-disable-next-line no-alert\r\n        if( !window.confirm('Delete this message?')) {\r\n            return;\r\n        }\r\n\r\n        const isLast = messages[messages.length -1].id === msgId;\r\n\r\n        const updates = {};\r\n\r\n        updates[`/messages/${msgId}`] = null;\r\n\r\n        if(isLast && messages.length > 1) {\r\n            updates[`/rooms/${chatId}/lastMessage`] = {\r\n                ...messages[messages.length -2],\r\n                msgId: messages[messages.length - 2].id\r\n            };\r\n        }\r\n\r\n        if(isLast && messages.length === 1) {\r\n            updates[`/rooms/${chatId}/lastMessage`] = null;\r\n        }\r\n\r\n        try {\r\n            await database.ref().update(updates);\r\n       \r\n            Alert.info('Message has been deleted')\r\n        } catch (err) {\r\n           return Alert.error(err.message);\r\n        }\r\n\r\n        if (file) {\r\n            try {\r\n               const fileRef = storage.refFromURL(file.url);\r\n               await fileRef.delete();\r\n            } catch (err) {\r\n                Alert.error(err.message);\r\n            }\r\n        }\r\n    }, \r\n      [chatId, messages]\r\n   );\r\n\r\n   const renderMessages = () => {\r\n       const groups = groupBy(messages, item => \r\n        new Date(item.createdAt).toDateString()\r\n        );\r\n\r\n        const items = [];\r\n\r\n        Object.keys(groups).forEach((date) => {\r\n\r\n\r\n            items.push(  <li key={date} className=\"text-center mb-1 padded\">{date}</li> )\r\n        \r\n            const msgs = groups[date].map(msg => (\r\n                <MessageItem \r\n                   key={msg.id} \r\n                   message={msg} \r\n                   handleAdmin={handleAdmin} \r\n                   handleLike={handleLike} \r\n                   handleDelete={handleDelete} \r\n                 /> \r\n             ));\r\n\r\n             items.push(...msgs);\r\n        }); \r\n\r\n        return items;\r\n  };\r\n\r\n    return (\r\n        <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n            {messages && messages.length >= PAGE_SIZE && (\r\n                <li className=\"text-center mt-2 mb-2\">\r\n                    <Button onClick={onLoadMore} color=\"green\">\r\n                        Load more\r\n                    </Button>\r\n                </li>\r\n            )}\r\n            {isChatEmpty && <li>No Messages yet</li>}\r\n            {canShowMessages && renderMessages()}  \r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { Loader } from 'rsuite';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { auth } from '../../misc/firebase';\r\nimport { transformToArr } from '../../misc/helpers';\r\n\r\nconst Chat = () => {\r\n    const {chatId} = useParams();\r\n\r\n    const rooms = useRooms();\r\n\r\n    if(!rooms) {\r\n        return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n    }\r\n\r\n    const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n    if(!currentRoom) {\r\n        return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n    }\r\n\r\n    const {name, description} = currentRoom;\r\n\r\n    const admins = transformToArr(currentRoom.admins);\r\n    const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n    const currentRoomData = {\r\n        name, description, admins, isAdmin,\r\n    };\r\n\r\n    return (\r\n        <CurrentRoomProvider data={currentRoomData}>\r\n           <div className=\"chat-top\">\r\n               <ChatTop />\r\n           </div>\r\n           <div className=\"chat-middle\">\r\n              <Messages /> \r\n           </div>\r\n           <div className=\"chat-bottom\">\r\n               <ChatBottom />\r\n           </div>\r\n        </CurrentRoomProvider>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Grid, Row, Col } from 'rsuite';\r\nimport { Switch, Route, useRouteMatch } from 'react-router';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport Chat from './Chat';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width: 992px)');\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n    return (\r\n      <RoomsProvider>\r\n        <Grid fluid className=\"h-100\">\r\n          <Row className=\"h-100\">\r\n              {canRenderSidebar && \r\n            <Col xs={24} md={8} className=\"h-100\">\r\n               <Sidebar />\r\n            </Col>\r\n            }\r\n\r\n            <Switch>\r\n                <Route exact path=\"/chat/:chatId\">\r\n                    <Col xs={24} md={16} className=\"h-100\">\r\n                     <Chat />\r\n                    </Col>  \r\n                </Route>\r\n                <Route>\r\n                    {isDesktop && <Col xs={24} md={16} className=\"h-100\">\r\n                      <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                    </Col>}\r\n                </Route>\r\n            </Switch>\r\n          </Row>\r\n        </Grid>\r\n      </RoomsProvider>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n    const { profile, isLoading } = useProfile();\r\n\r\n    if(isLoading && !profile) {\r\n        return ( \r\n        <Container>\r\n         <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n        </Container>\r\n        );\r\n    }\r\n\r\n    if (profile && !isLoading) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n          {children}  \r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\nimport {  Switch } from 'react-router';\nimport SignIn from './pages/SignIn';\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './pages/Home';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\n\nfunction App() {\n  return (\n     <ProfileProvider> \n    <Switch>\n     <PublicRoute path=\"/signin\">\n       <SignIn />\n     </PublicRoute>\n     <PrivateRoute path=\"/\">\n       <Home />\n     </PrivateRoute>\n    </Switch>\n    </ProfileProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render( \n<BrowserRouter>\n   <App />\n</BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n"],"sourceRoot":""}